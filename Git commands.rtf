{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\froman\fprq2\fcharset0 Liberation Mono{\*\falt Courier New};}{\f5\froman\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f6\fnil\fprq2\fcharset0 Liberation Mono{\*\falt Courier New};}{\f7\fnil\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red201\green33\blue30;\red255\green64\blue0;}
{\stylesheet{\s0\snext0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1 Normal;}
{\*\cs15\snext15\dbch\af6\loch\f4 Source Text;}
{\*\cs16\snext16\langfe255\cf9\lang255\ul\ulc0 Hyperlink;}
{\*\cs17\snext17\langfe255\cf13\lang255\ul\ulc0 FollowedHyperlink;}
{\s18\sbasedon0\snext19\dbch\af7\langfe1081\dbch\af7\afs28\ql\widctlpar\hyphpar1\sb240\sa120\keepn\ltrpar\cf0\loch\f5\fs28\lang1033\kerning1 Heading;}
{\s19\sbasedon0\snext19\dbch\af7\langfe1081\dbch\af7\afs24\sl288\slmult1\ql\widctlpar\hyphpar1\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1 Text Body;}
{\s20\sbasedon19\snext20\dbch\af7\langfe1081\dbch\af7\afs24\sl288\slmult1\ql\widctlpar\hyphpar1\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1 List;}
{\s21\sbasedon0\snext21\dbch\af7\langfe1081\dbch\af7\afs24\ai\ql\widctlpar\hyphpar1\sb120\sa120\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1 Caption;}
{\s22\sbasedon0\snext22\dbch\af7\langfe1081\dbch\af7\afs24\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1 Index;}
{\s23\sbasedon0\snext23\dbch\af7\langfe1081\dbch\af7\afs20\ql\widctlpar\hyphpar1\sb0\sa0\ltrpar\cf0\loch\f4\fs20\lang1033\kerning1 Preformatted Text;}
}{\*\generator LibreOffice/7.0.4.2$Windows_X86_64 LibreOffice_project/dcf040e67528d9187c66b2379df5ea4407429775}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr2021\mo3\dy3\hr8\min34}{\printim\yr0\mo0\dy0\hr0\min0}}{\*\userprops}\deftab720
\hyphauto1\viewscale80
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default Page Style;}}
\formshade{\*\pgdscno0}\paperh16838\paperw11906\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\pgndec\sftnnar\saftnnrlc\sectunlocked1\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
Hello Group,}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\loch
Please feel free to add to correct any information in this document.  This should be enough to get us started.  The one condition is to make sure it is all short info.  At no point we should copy paste from the internet.  It is a cheat sheet, not a full blown tutorial. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\loch
Bookmarks:}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{{\field{\*\fldinst HYPERLINK "#WORKFLOW" }{\fldrslt {\rtlch\langfe255 \ltrch\cf9\lang255\ul\ulc0\loch
WORKFLOW}}}}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{{\field{\*\fldinst HYPERLINK "#USING GIT" }{\fldrslt {\rtlch\langfe255 \ltrch\cf9\lang255\ul\ulc0\loch
USING GIT}}}}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{{\field{\*\fldinst HYPERLINK "#ADD IGNORE COMMIT" }{\fldrslt {\rtlch\langfe255\ab0 \ltrch\cf9\lang255\ul\ulc0\b0\loch
ADD, IGNORE, COMMIT }{}}}{\field{\*\fldinst HYPERLINK "#ADD IGNORE COMMIT" }{\fldrslt {\rtlch\langfe255\ab0 \ltrch\cf9\lang255\ul\ulc0\b0\loch
(local)}}}}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{{\field{\*\fldinst HYPERLINK "#CHANGING HISTORY" }{\fldrslt {\rtlch\langfe255\ab0 \ltrch\cf9\lang255\ulnone\ulc0\b0\loch
C}{}}}{\field{\*\fldinst HYPERLINK "#CHANGING HISTORY" }{\fldrslt {\rtlch\langfe255\ab0 \ltrch\cf9\lang255\ulnone\ulc0\b0\loch
HANGING HISTORY }{}}}{\field{\*\fldinst HYPERLINK "#CHANGING HISTORY" }{\fldrslt {\rtlch\langfe255\ab0 \ltrch\cf9\lang255\ulnone\ulc0\b0\loch
(local)}}}}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{{\field{\*\fldinst HYPERLINK "#PUSHING TO GITHUB" }{\fldrslt {\rtlch\langfe255\ab0 \ltrch\cf9\lang255\ulnone\ulc0\b0\loch
PUSHING TO GITHUB}}}}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{{\field{\*\fldinst HYPERLINK "#CLONING AND PULLING" }{\fldrslt {\rtlch\langfe255\ab0 \ltrch\cf9\lang255\ulnone\ulc0\b0\loch
CLONING OR PULLING }{}}}{\field{\*\fldinst HYPERLINK "#CLONING AND PULLING" }{\fldrslt {\rtlch\langfe255\ab0 \ltrch\cf9\lang255\ulnone\ulc0\b0\loch
A REPOSITORY}}}}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{{\field{\*\fldinst HYPERLINK "#RESTORING FILES" }{\fldrslt {\rtlch\langfe255\ab0 \ltrch\cf9\lang255\ulnone\ulc0\b0\loch
RESTORING FILES}}}}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{{\field{\*\fldinst HYPERLINK "#DELETING FILES" }{\fldrslt {\rtlch\langfe255\ab0 \ltrch\cf9\lang255\ulnone\ulc0\b0\loch
DELETING FILES}}}}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{{\field{\*\fldinst HYPERLINK "#BRANCHING" }{\fldrslt {\rtlch\langfe255\ab0 \ltrch\cf13\lang255\ulnone\ulc0\b0\loch
BRANCHING}}}}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\qc{{\*\bkmkstart USING GIT}{\*\bkmkstart WORKFLOW}{\*\bkmkend USING GIT}{\*\bkmkend WORKFLOW}\loch
WORKFLOW}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
What is Git?}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\loch
Git is a method of version control.  It tracks changes to the code.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
How does Git do this?}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\loch
Install Git, then choose which folder you want to track, Git will create  a .Git folder inside the folder we choose to track down the changes.  So all of the files in the folder could potentially be tracked for changes, but not necessarily.  We tell it what to do and what not to. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
How do I use Git?}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\loch
It requires the command line for the most part. When you install Git, it will also install a lot of new commands that are not present in the command line. These are the Git commands.  We use those commands to track the add files, and commit changes.  }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
Where do I use the commands?}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\loch
There are three places.. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
cmd}{\loch
: the command line that we all now and love.  You can type cmd in the start button and it will launch the command line.  Another way, is to type cmd in the address bar of the folder you are looking at.  This is useful so you don\u8217\'92t have to use commands to navigate to desired folder. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
powershell}{\loch
:  it looks blue, but it works like the command line for the most part.  The advantage of the powershell is that is has a lot more command available than cmd, but the use is identical.  the problem with powershell is that is super glitchy.  Powershell is newish, and was made my MS to give its users a more powerful command line environment, similar in capability to the many shells available in Linux.  But it can be glitch, and I have run into issues with some commands working in cmd, but not in powershell. That is crazy I know, but it has happened to me.  Other problems are display issues when connected remotely through SSH. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
Git Bash}{\loch
:  if you right click a folder after installing Git, you can see an option in the menu called Git Bash.  It is a more Linux-like command line but it works the same for what we want it.  It just gives you access to some Linux commands, if you are into that.  }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
Hold on what second, I see a menu called Git GUI when I right click on folders. What\u8217\'92s up with that?}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\loch
Yes, Git also has a GUI like environment, but I don't use it nor know how really.  I heard there are interview questions about GitHub sometimes, so I prefer to use command line to get used to it. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
Is Git the same as GitHub?}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\loch
GitHub is a hosting service for Gits. It is the most popular, and owned by Microsoft Corporation.  You can use other hosting services, but they are not as popular.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\qc{{\*\bkmkstart ADD IGNORE COMMIT11}{\*\bkmkstart ADD IGNORE COMMIT1}{\*\bkmkend ADD IGNORE COMMIT11}{\*\bkmkend ADD IGNORE COMMIT1}\rtlch\ab0 \ltrch\b0\loch
USING GIT}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\loch
Download Git!}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{{\field{\*\fldinst HYPERLINK "https://git-scm.com/downloads" }{\fldrslt {\rtlch\langfe255 \ltrch\cf9\lang255\ul\ulc0\loch
https://git-scm.com/downloads}}}}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\loch
During the installation process, you may be prompted to choose the default branch name. If so, please choose main.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\loch
If you already have Git in your machine, maybe try to update it? in the command line, type this command:}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch \ltrch\b\loch
git update-git-for-windows}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\loch
Choose the folder you want to use.  The name doesn't matter too much, but it is convenient to name it the same as the repository you will use later on. }{\rtlch \ltrch\ul\ulc0\loch
Then enable view hidden files, and view file extensions in your window settings.  }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\loch
Navigate to the folder, type in \u8220\'93}{\rtlch\ab \ltrch\b\loch
powershell}{\loch
\u8221\'94 in the navigation bar, and powershell will come up. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\loch
If you don't want to use power shell, you can do the same with \u8220\'93}{\rtlch\ab \ltrch\b\loch
cmd}{\loch
\u8221\'94 or right click the folder and select }{\rtlch\ab \ltrch\b\loch
Git Bash}{\loch
.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\loch
Type the following command:}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git init}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
Now there will be another folder called .git inside.  This is where the changes to the code are kept.  No need to go in there and change anything.  We just know that this folder indicates all files can be tracked for changes. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
Now you have two choices, create a local repository or clone a remote one that someone gave you access to.  For instructions how to clone, }{{\field{\*\fldinst HYPERLINK "#CLONING AND PULLING" }{\fldrslt {\rtlch\langfe255\ab0 \ltrch\cf9\lang255\ul\ulc0\b0\loch
click here}{}}}\rtlch\ab0 \ltrch\b0\loch
.  Otherwise just continue reading. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\qc{{\*\bkmkstart ADD IGNORE COMMIT}{\*\bkmkstart CHANGING HISTORY}{\*\bkmkend ADD IGNORE COMMIT}{\*\bkmkend CHANGING HISTORY}\rtlch\ab0 \ltrch\b0\loch
ADD, IGNORE, COMMIT}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
After coding for a while, you now have reached a stopping point where the code is stable, and it just kind of works. Moving on could break the code, so this is when we log the first version of our code.  }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
If you want to track a single file, and this is all you care about, then add that file.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git add filename}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
If you want to add all the files, or just files with certain naming conventions, Git is got your back.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git add *\tab \tab \tab //this will add all of the files. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git add *.file_extension\tab //only certain file extensions}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git add .\tab \tab \tab //everything}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
What if you added something you didn't mean?}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git rm - -cached filename.extension\tab //two dashes, no space. Watch capitalization and \tab \tab \tab \tab \tab \tab //must type file extension}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
If there is this one precious file you don\u8217\'92t want to keep track of, or share with anyone, you can add it to the ignore list. Create a file named .gitignore and the exact name of the files you want. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
In powershell:}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
New-Item \u8216\'91.gitignore\u8217\'92 -ItemType File\tab //don\u8217\'92t use the file extension or it won\u8217\'92t work.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
\tab \tab \tab \tab \tab \tab //the file created will open fine in notepad}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
In Git Bash:}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
touch .gitignore}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
Check your progress.  See what files have been added, which ones have changes since the last time you committed (saved) the file version, and which files are being ignored. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git status\tab \tab \tab //checks working branch}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git status - -branch\tab \tab //two dashes, no space. Checks target branch}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
note}{\rtlch\ab0 \ltrch\b0\loch
: if your working branch says }{\rtlch\ab0 \ltrch\ul\ulc0\b0\loch
master}{\rtlch\ab0 \ltrch\b0\loch
, please change its name to }{\rtlch\ab0 \ltrch\ul\ulc0\b0\loch
main}{\rtlch\ab0 \ltrch\b0\loch
.  There is more on branching below, but please use this command in the meantime.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git branch - -move main\tab //Two dashes, no space.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
Step 5: }{\rtlch\ab0 \ltrch\b0\loch
commit to a change, or a stable stopping point.  You will be able to revert changes to the code if needed later on.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git commit\tab \tab \tab \tab \tab //another screen will appear to make comments}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git commit -m \u8216\'91comment about code version\u8217\'92}{\rtlch\ab0 \ltrch\b0\loch
\tab \tab }{\rtlch\ab \ltrch\b\loch
//comment right on the command}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
In programming, you are told to make comments so you remember the code.  Sometimes we don't do it because the code is so obvious, but sometimes it is a life saver because we won\u8217\'92t remember what that code does after some time. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
The same can be said about Git versions. You won\u8217\'92t remember details about this commit instance, let alone someone else who may be looking at your code. }{\rtlch\ab0 \ltrch\ul\ulc0\b0\loch
Please remember to always make meaningful comments about what the code does or the changes you made.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ul\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\qc{{\*\bkmkstart PUSHING TO GITHUB21}{\*\bkmkstart PUSHING TO GITHUB2}{\*\bkmkend PUSHING TO GITHUB21}{\*\bkmkend PUSHING TO GITHUB2}\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
CHANGING HISTORY}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ul\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
Let\u8217\'92s say I saved a change and kept on working late into the night and then saved again.  As a consequence, my code is not the best and wish to revert to my last code version, or even earlier ones.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
First, lets see how many commits we have done.  Maybe you want to go back a few changes or so. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git log - -oneline \tab //two dashes, no space. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
Now, we can do SEVERAL things.  For example, we can checkout, revert, rebase, amend, reset, reorder, etc.  Not all of this ones can be useful, or common.  So let\u8217\'92s start with the basic one, checkout.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
If you want to go back to the last committed version of one or two particular files, use checkout. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git checkout - - filename1 filename2\tab //two dashes, no space. Don\u8217\'92t forget file extension}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git checkout - - .\tab \tab \tab \tab //two dashes, no space. All files get reverted}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\ulnone\ulc0\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
The limitation of checkout, is that is doesn\u8217\'92t work on files that have been committed.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
Now, lets say you have many commits, and you would like to go back to a previous version of your code. Then we use revert. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git log - -oneline\tab \tab //two dashes, no space. See the change list, and copy the commit \tab \tab \tab \tab //id you want. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git revert commit_id\tab \tab //all code goes back to this point in time.  A new commit occurs.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git revert -n commit_id\tab //your files will change, but will not be auto committed.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git revert HEAD~1\tab \tab //goes back one or two commits.  Change the number}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ul\ulc0\b0\loch
Reverting does not delete the old commits}{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
.  It simply reverts the code changes by creating a new commit that is identical to the one you chose.  So basically, the commit history grows. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
Now, let\u8217\'92s try reset.  }{\rtlch\ab \ltrch\cf18\ulnone\ulc0\b\loch
This one is dangerous}{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
, so please use with a lot a lot of care.  It will delete all of the code changes, and there is not turning back.  There will be no history.  }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git log - -oneline\tab \tab //two dashes, no space. See the change list, and copy the commit \tab \tab \tab \tab //id you want. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git reset - -hard commit_id\tab \tab //the commit id will be the new head, and all later changes \tab \tab \tab \tab \tab //will be erased.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\qc{{\*\bkmkstart PUSHING TO GITHUB}{\*\bkmkend PUSHING TO GITHUB}\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
PUSHING TO GITHUB}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
First, set your name or user name in Git, so that when you push files, GitHub knows who you are and the repository permissions work.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git config - -global user.name\tab \tab \tab //will return who you are if already set}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git config - -global \u8211\'96list\tab \tab \tab \tab //will return a lot more data about you}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git config - -global user.name \u8216\'91Your_Name\u8217\'92\tab //set or change your name}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git config - -global user.email \u8216\'91Your_eMail\u8217\'92 \tab //set or change your email. Required to push}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
Now you must log in to GitHub.com and create a repository. When you create the repository, it will have an address that we use to link it to our local machine.  If you are using a repository someone else created, they need to add you as a collaborator first if you wish to push.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ul\ulc0\b0\loch
The repository hosted in GitHub is referred to as a remote}{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
.  We can have many remotes listed in Git, but it is common to call the main one }{\rtlch\ab0 \ltrch\ul\ulc0\b0\loch
origin}{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
.  It is best to add the repository to your git folder from the start, so the commands are easier.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git remote\tab //returns a list of all the remotes}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
To add a remote repository, use the remote command.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git remote add origin main web_code_from_GitHub}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
Note two things:}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
1. O}{\rtlch\ab0 \ltrch\ul\ulc0\b0\loch
rigin is the name of the remote,}{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
 and we usually name it origin but can name it something else. Origin means it is the primary remote, and the one we will be pushing code to, unless otherwise specified.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
2. main is the branch we are adding.  This will make more sense when we do branching. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
To know if the remote is now added, use the remote command.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git remote\tab //it will print a list of all the remote repositories in your folder}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\ulnone\ulc0\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
Now, push data into your remote.  Remember to commit first.  I}{\rtlch\ab0 \ltrch\ul\ulc0\b0\loch
n some instances, you must pull before being able to push to ensure the code is up to date.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git push -u origin main\tab //you are pushing the local main branch into origin repository}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git push \u8211\'96all\tab \tab \tab // push all branches into origin}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\qc{{\*\bkmkstart CLONING AND PULLING}{\*\bkmkend CLONING AND PULLING}\rtlch\ab0 \ltrch\b0\loch
CLONING OR PULLING A REPOSITORY.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
There are three commands you can use: }{\rtlch\ab \ltrch\b\loch
clone, fetch, pull}{\rtlch\ab0 \ltrch\b0\loch
. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
clone}{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
: think of this as a download and nothing else.  It does not track files, add remotes, commit, push, or anything similar.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git clone link_to_repository\tab \tab }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\ulnone\ulc0\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
fetch}{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
: the idea of fetch is to fetch the changes log, but not the actual changes.  You could use it }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\ulnone\ulc0\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git remote add origin link_to_repository\tab \tab //must have a remote first if not done before}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git fetch}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\ulnone\ulc0\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
pull}{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
:  this is what we use when we want to sync the remote repository with ours.  When someone makes a change, }{\rtlch\ab0 \ltrch\ul\ulc0\b0\loch
we must pull before pushing}{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
.  Otherwise we could be pushing old code, and this would create confusion. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\ulnone\ulc0\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git pull link_to_repository\tab \tab \tab //pulls from link. Does not add remote}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git pull origin main\tab \tab \tab \tab //assuming you want to pull from remote origin and \tab \tab \tab \tab \tab \tab //main branch. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\ulnone\ulc0\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
In some occasions, you may get errors about unrelated histories, and such.  This is because git senses a mismatch in the repositories, and wants to keep you from making mistakes.  The typical issue is that the branch names are different.  To override such situation (with a lot of care), use:}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git pull - -allow-unrelated-histories}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\ulnone\ulc0\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\*\bkmkstart ADD IGNORE COMMIT22}{\*\bkmkstart ADD IGNORE COMMIT21}{\*\bkmkstart ADD IGNORE COMMIT3}{\*\bkmkstart ADD IGNORE COMMIT2}{\*\bkmkend ADD IGNORE COMMIT22}{\*\bkmkend ADD IGNORE COMMIT21}{\*\bkmkend ADD IGNORE COMMIT3}{\*\bkmkend ADD IGNORE COMMIT2}{\*\bkmkstart ADD IGNORE COMMIT22}{\*\bkmkstart ADD IGNORE COMMIT21}{\*\bkmkstart ADD IGNORE COMMIT3}{\*\bkmkstart ADD IGNORE COMMIT2}{\*\bkmkend ADD IGNORE COMMIT22}{\*\bkmkend ADD IGNORE COMMIT21}{\*\bkmkend ADD IGNORE COMMIT3}{\*\bkmkend ADD IGNORE COMMIT2}\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\qc{{\*\bkmkstart DELETING FILES}{\*\bkmkend DELETING FILES}\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
RESTORING FILES}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\ulnone\ulc0\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
If you happen to delete a file from your local folder, simply pulling will not work for you.  In which case, use the restore command. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git restore file_name\tab \tab //specific file}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git restore .\tab \tab \tab //all files missing files}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\ulnone\ulc0\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\ulnone\ulc0\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\qc{{\*\bkmkstart CHANGING HISTORY11}{\*\bkmkstart CHANGING HISTORY1}{\*\bkmkend CHANGING HISTORY11}{\*\bkmkend CHANGING HISTORY1}\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
DELETING FILES}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\qc\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\qc\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
If you want to delete a file from the repository, then use the rm command.}{\rtlch\ab0 \ltrch\ul\ulc0\b0\loch
  It will also delete the file from your machine}{\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch
, so back it up first if you intend to keep it. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\ulnone\ulc0\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git rm file.extension}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\ulnone\ulc0\b\loch
git rm \tab -r /folder1/*.txt\tab //this deletes all text files inside the folder1}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\ulnone\ulc0\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{{\*\bkmkstart USING GIT1}{\*\bkmkstart ADD IGNORE COMMIT12}{\*\bkmkstart CHANGING HISTORY12}{\*\bkmkstart WORKFLOW1}{\*\bkmkstart PUSHING TO GITHUB22}{\*\bkmkstart CLONING AND PULLING1}{\*\bkmkstart PUSHING TO GITHUB1}{\*\bkmkend USING GIT1}{\*\bkmkend ADD IGNORE COMMIT12}{\*\bkmkend CHANGING HISTORY12}{\*\bkmkend WORKFLOW1}{\*\bkmkend PUSHING TO GITHUB22}{\*\bkmkend CLONING AND PULLING1}{\*\bkmkend PUSHING TO GITHUB1}\rtlch\ab0 \ltrch\b0
 }{\rtlch\ab0 \ltrch\b0\loch
Then commit the changes. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git commit -m \u8216\'91comment goes here\u8217\'92}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
If you need to delete a file uploaded by mistake, because it has a password or such (I\u8217\'92ve done this), then use the following command. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s23\dbch\af7\langfe1081\dbch\af7\afs20\ql\widctlpar\hyphpar1\sb0\sa0\ltrpar\cf0\loch\f4\fs20\lang1033\kerning1{\rtlch\ab \ltrch\cs15\dbch\af6\loch\f4\b\loch
git filter-branch -f --prune-empty --index-filter "git rm -r --cached --ignore-unmatch ./file_you_want_gone" HEAD}
\par \pard\plain \s23\dbch\af7\langfe1081\dbch\af7\afs20\ql\widctlpar\hyphpar1\sb0\sa0\ltrpar\cf0\loch\f4\fs20\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s23\dbch\af7\langfe1081\dbch\af7\afs20\ql\widctlpar\hyphpar1\sb0\sa0\ltrpar\cf0\loch\f4\fs20\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s23\dbch\af7\langfe1081\dbch\af7\afs20\ql\widctlpar\hyphpar1\sb0\sa0\ltrpar\cf0\loch\f4\fs20\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s23\dbch\af7\langfe1081\dbch\af7\afs20\ql\widctlpar\hyphpar1\sb0\sa0\ltrpar\cf0\loch\f4\fs20\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s23\dbch\af7\langfe1081\dbch\af7\afs20\ql\widctlpar\hyphpar1\sb0\sa0\ltrpar\cf0\loch\f4\fs20\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s23\dbch\af7\langfe1081\dbch\af7\afs20\ql\widctlpar\hyphpar1\sb0\sa0\ltrpar\cf0\loch\f4\fs20\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s23\dbch\af7\langfe1081\dbch\af7\afs20\ql\widctlpar\hyphpar1\sb0\sa0\ltrpar\cf0\loch\f4\fs20\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s23\dbch\af7\langfe1081\dbch\af7\afs20\ql\widctlpar\hyphpar1\sb0\sa0\ltrpar\cf0\loch\f4\fs20\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\qc{{\*\bkmkstart BRANCHING}{\*\bkmkend BRANCHING}\rtlch\ab0 \ltrch\b0\loch
BRANCHING}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
Branching is used to create an alternative universe to our code.  We can explore other options, and once we know they work, we can merge the code to the original code base. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
Before creating a branch, find out which branch are available}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git branch\tab //this will return the list of all the branches}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
If you just created the repository, it is quite possible the command above will not return any branches.  However, this does not mean you don\u8217\'92t have a branch.  It can be complicated, but try this:}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git status\tab //will tell you which files are tracked, but the first line will be the branch. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
Git branch returns no lines, but git status says I am in the main branch.  This is when the default branch name comes in. When you commit files, it will be done to that default branch, unless you create another one.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git branch branch_name\tab //create a branch}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git branch\tab \tab \tab //confirm it}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
After running the last command, you would add files and commit so now it has a starting point. In order to do that, make the new branch you want your active branch.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git checkout branch_name\tab //change branch}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git status\tab \tab \tab //confirm you are on the new branch and what files are there}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git add .\tab \tab \tab //add all files}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git commit -m \u8216\'91new branch for experimental code\u8217\'92\tab //commit files}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git push origin new_branch\tab \tab \tab \tab \tab //push the new branch}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
The last command may give you an error, because this new branch name doesn\u8217\'92t exist in the remote.  To get around it, use the following command:}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git push - -set-upstream origin new_branch\tab //pushing new_branch into remote}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
If you want to move the entire contents of your current branch to another branch, use the move option. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git branch - -move branch_you_want\tab //this is renaming the branch}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git branch\tab \tab \tab \tab \tab //see changes}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\cf17\b\loch
The command above renames the branch, but only in the local folder}{\rtlch\ab0 \ltrch\b0\loch
.  For example: you moved branch1 into branch2.  Because this is a local rename, branch2 is still called branch1 in GitHub. This is extremely confusing, so moving must be done carefully or you will go crazy.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
If you created a branch by mistake, and the history is now messy, then you can go to GitHub and delete the branch with a pull request.  Another way to do it is locally. }
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git branch -d unwanted_branch}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
To delete the branch in the remote as well, use push.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git push -d origin unwanted_branch\tab \tab //if the branch to be delete is active, this wont \tab \tab \tab \tab \tab \tab \tab //work. Switch branches with checkout first}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git push -D origin unwanted_branch\tab \tab //force delete active branch}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab \ltrch\b\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab0 \ltrch\b0\loch
If you have tried the code, and want merge to the original code base, then we can merge the test branch into the main or working branch.}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git checkout branch_you_want_to_keep}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git merge branch_that_will_not_longer_exits\tab //this happened in the local folder only}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1{\rtlch\ab \ltrch\b\loch
git push origin branch_you_want_to_keep\tab //update remote}
\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\rtlch\ab0 \ltrch\b0\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s0\dbch\af7\langfe1081\dbch\af7\afs24\alang1081\ql\widctlpar\hyphpar1\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s19\dbch\af7\langfe1081\dbch\af7\afs24\sl288\slmult1\ql\widctlpar\hyphpar1\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\loch

\par \pard\plain \s19\dbch\af7\langfe1081\dbch\af7\afs24\sl288\slmult1\ql\widctlpar\hyphpar1\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl288\slmult1\sb0\sa140\loch

\par }